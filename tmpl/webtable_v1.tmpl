//create by webtable-code-generator webtable_v1 gen at {{.CreatedOn.Format "Jan 02, 2006 15:04:05 UTC"}}
//package 
package {{.Package}};

//import some packages and classes
import top.hcy.webtable.annotation.charts.WChart;
import top.hcy.webtable.annotation.field.*;
import top.hcy.webtable.annotation.method.WDeleteTrigger;
import top.hcy.webtable.annotation.method.WInsertTrigger;
import top.hcy.webtable.annotation.method.WUpdateTrigger;
import top.hcy.webtable.annotation.table.*;
import top.hcy.webtable.charts.WCharts;
import top.hcy.webtable.common.enums.WebFieldType;

{{ if  .EnableInsert }}@WEnadbleInsert {{end -}}
{{ if  .EnadbleFind }}@WEnadbleInsert {{end -}}
{{ if  .EnadbleUpdate }}@WEnadbleUpdate {{end -}}
{{ if  .EnadbleSort }}@WEnadbleSort {{end -}}
{{ if  .EnadbleDelete }}@WEnadbleDelete {{end -}}
{{ if  .EnadbleChart }}@WEnadbleChart {{end }}
@WTable(aliasName = "{{.Alias}}",tableName = "{{.Table}}")
public class {{.ClassName}} {

{{range $k, $v := .Fields}}
   {{ if $v.EnableInsert }}@WInsertField {{end -}}
   {{ if $v.EnableUpdate }}@WUpdateField {{end -}}
   {{ if $v.EnableFind }}@WFindField {{end -}}
   {{ if $v.EnableSort }}@WSortField {{end }}
   @WField(aliasName = "{{$v.Alias}}",columnName = "{{$v.Column}}"{{- if $v.EnableRead}}{{else}}, read=false{{end}})
   private {{$v.Type}} {{$v.Name}};
{{end}}




{{range $k, $v := .Fields}}
{{- if $v.EnableConvertToShowFunction }}
   @WFieldToShow("{{$v.Name}}")
   public Object w{{$v.Name}}FieldToShow(Object ob){
      System.out.println("------------- w{{$v.Name}}FieldToShow ------------- ");
      return ob;
   }
{{end }}

{{- if $v.EnableConvertToPersistenceFunction }}
   @WFieldToShow("{{$v.Name}}")
   public Object w{{$v.Name}}FieldToPersistence(Object ob){
      System.out.println("------------- w{{$v.Name}}FieldToPersistence ------------- ");
      return ob;
   }

{{end -}}

{{end}}

{{- if  .EnadbleSelectTrigger  }}
 
   @WSelectTrigger
   public void selectDataTrigger(WebTableContext ctx){
      System.out.println("------------- selectDataTrigger --------------");
   }

{{end  -}}

{{- if  .EnadbleInsertTrigger  }}
 
   @WInsertTrigger
   public void insertDataTrigger(WebTableContext ctx){
      System.out.println("------------- insertDataTrigger --------------");
   }

{{end  -}}

{{- if  .EnadbleUpdateTrigger  }}

   @WUpdateTrigger
   public void updateDataTrigger(WebTableContext ctx){
      System.out.println("------------- updateDataTrigger --------------");
   }

{{end  -}}


{{- if  .EnadbleDeleteTrigger  }}
   @WDeleteTrigger
   public void deleteDataTrigger(WebTableContext ctx){
     System.out.println("------------- deleteDataTrigger --------------");
   }
{{end  -}}

}